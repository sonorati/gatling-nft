apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'maven'

group = 'com.digitalinside.perf'
version = '1.0-SNAPSHOT'

description = "performance tests for move money"

buildDir = 'target'

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven { url 'http://repository.excilys.com/content/groups/public' }
    maven { url "http://repo.maven.apache.org/maven2" }
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()

        maven {
            url 'http://repository.excilys.com/content/groups/public'
        }
        maven { url "http://repo.maven.apache.org/maven2" }

    }

}


sourceCompatibility = "1.8"
targetCompatibility = "1.8"
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"


dependencies {
    testCompile "io.gatling.highcharts:gatling-charts-highcharts:2.1.7"
    testCompile "io.gatling:gatling-app:2.1.7"
    testCompile "io.gatling:gatling-recorder:2.1.7"
    testCompile "org.scala-lang:scala-library:'2.11.8"
    testCompile "org.glassfish.jersey.core:jersey-client:2.22.1"
    testCompile "io.spray:spray-json_2.11:1.3.2"
    testCompile "com.github.tomakehurst:wiremock:2.1.11"
}


task loadTest(type: JavaExec, dependsOn: testClasses) {

    def env = project.hasProperty("env") ? env : "local"
    def rampUp = project.hasProperty("rampUp") ? rampUp : "60"
    def users = project.hasProperty("users") ? users : "100"
    def duration = project.hasProperty("duration") ? duration : "2"
    def startUsers = project.hasProperty("startUsers") ? startUsers : "1"

    description = "load test with Gatling"
    group = "Load Test"
    classpath = sourceSets.test.runtimeClasspath
    jvmArgs = [
            // workaround for https://github.com/gatling/gatling/issues/2689
            "-Dgatling.core.directory.binaries=${sourceSets.test.output.classesDir.toString()}",
            "-Dlogback.configurationFile=${logbackGatlingConfig()}",
            "-Denv=${env}",
            "-DrampUp=${rampUp}",
            "-Dusers=${users}",
            "-Dduration=${duration}",
            "-DstartUsers=${startUsers}"
    ]
    main = "io.gatling.app.Gatling"
    args = [
            "--simulation", "${loadSimulationClass()}",
            "--results-folder", "${buildDir}/gatling-results",
            "--binaries-folder", sourceSets.test.output.classesDir.toString(), // ignored because of above bug
            "--bodies-folder", sourceSets.test.resources.srcDirs.toList().first().toString() + "/gatling/bodies",
    ]
}


def loadSimulationClass() {
    return project.hasProperty("simulationClass") ? ("com.digitalinside.perf.app.simulations." + simulationClass) : "com.digitalinside.perf.app.simulations.BaseLineReadAccountsSimulation"
}

def logbackGatlingConfig() {
    return sourceSets.test.resources.find { it.name == 'logback-gatling.xml' }
}

task wrapper(type: Wrapper) {
    gradleVersion = "2.10"
}
